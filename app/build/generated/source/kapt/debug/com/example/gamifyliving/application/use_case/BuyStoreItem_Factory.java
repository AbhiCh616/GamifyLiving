// Generated by Dagger (https://dagger.dev).
package com.example.gamifyliving.application.use_case;

import com.example.gamifyliving.application.repository.CoinRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BuyStoreItem_Factory implements Factory<BuyStoreItem> {
  private final Provider<CoinRepository> coinRepositoryProvider;

  public BuyStoreItem_Factory(Provider<CoinRepository> coinRepositoryProvider) {
    this.coinRepositoryProvider = coinRepositoryProvider;
  }

  @Override
  public BuyStoreItem get() {
    return newInstance(coinRepositoryProvider.get());
  }

  public static BuyStoreItem_Factory create(Provider<CoinRepository> coinRepositoryProvider) {
    return new BuyStoreItem_Factory(coinRepositoryProvider);
  }

  public static BuyStoreItem newInstance(CoinRepository coinRepository) {
    return new BuyStoreItem(coinRepository);
  }
}
