// Generated by Dagger (https://dagger.dev).
package com.example.gamifyliving.application.use_case;

import com.example.gamifyliving.application.repository.CoinRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetCoins_Factory implements Factory<GetCoins> {
  private final Provider<CoinRepository> coinsRepositoryProvider;

  public GetCoins_Factory(Provider<CoinRepository> coinsRepositoryProvider) {
    this.coinsRepositoryProvider = coinsRepositoryProvider;
  }

  @Override
  public GetCoins get() {
    return newInstance(coinsRepositoryProvider.get());
  }

  public static GetCoins_Factory create(Provider<CoinRepository> coinsRepositoryProvider) {
    return new GetCoins_Factory(coinsRepositoryProvider);
  }

  public static GetCoins newInstance(CoinRepository coinsRepository) {
    return new GetCoins(coinsRepository);
  }
}
