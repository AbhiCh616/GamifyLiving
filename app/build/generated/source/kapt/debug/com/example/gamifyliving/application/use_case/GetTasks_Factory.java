// Generated by Dagger (https://dagger.dev).
package com.example.gamifyliving.application.use_case;

import com.example.gamifyliving.application.repository.TaskRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetTasks_Factory implements Factory<GetTasks> {
  private final Provider<TaskRepository> repositoryProvider;

  public GetTasks_Factory(Provider<TaskRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetTasks get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetTasks_Factory create(Provider<TaskRepository> repositoryProvider) {
    return new GetTasks_Factory(repositoryProvider);
  }

  public static GetTasks newInstance(TaskRepository repository) {
    return new GetTasks(repository);
  }
}
