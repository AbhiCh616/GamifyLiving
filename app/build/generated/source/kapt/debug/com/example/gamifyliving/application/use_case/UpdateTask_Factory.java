// Generated by Dagger (https://dagger.dev).
package com.example.gamifyliving.application.use_case;

import com.example.gamifyliving.application.repository.TaskRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UpdateTask_Factory implements Factory<UpdateTask> {
  private final Provider<TaskRepository> taskRepositoryProvider;

  public UpdateTask_Factory(Provider<TaskRepository> taskRepositoryProvider) {
    this.taskRepositoryProvider = taskRepositoryProvider;
  }

  @Override
  public UpdateTask get() {
    return newInstance(taskRepositoryProvider.get());
  }

  public static UpdateTask_Factory create(Provider<TaskRepository> taskRepositoryProvider) {
    return new UpdateTask_Factory(taskRepositoryProvider);
  }

  public static UpdateTask newInstance(TaskRepository taskRepository) {
    return new UpdateTask(taskRepository);
  }
}
